#!/usr/bin/env python

from TestBase import *


class SSDCheck(TestBase):
    section_str = "Section: SSD Check"
    def __init__(self, config, eventManager, log, comm):
	TestBase.__init__(self, config, eventManager, log, comm)
        
    def Start(self):
	self.log.Print(SSDCheck.section_str)
        try:
    	    self.WriteReadTestData('10.194.148.58')
        except Error, error:
            errCode, errMsg = error
            self.log.Print('TestEnd => ErrorCode=%s: %s' % (errCode, errMsg))
            return 'FAIL ErrorCode=%s: %s' % (errCode, errMsg)
        except Exception, exception:
            self.log.Print('TestEnd => ErrorCode=%s: %s' % (self.errCode['Others_Fail'], 'Others_Fail'))
	    print exception
            return 'FAIL ErrorCode=%s: %s' % (self.errCode['Others_Fail'], 'Others_Fail')
        else:
            self.log.Print("TestChk => PASS: SSD Verify")
	    return 'PASS'

    def WriteReadTestData(self, ip):
	cmdstr = 'ping -c 10 '+ip
	self.comm.SendReturn(cmdstr)
	line = self.comm.RecvTerminatedBy()
        cmdstr = 'echo $?'
	self.comm.SendReturn(cmdstr)
	line = self.comm.RecvTerminatedBy()
	if line.find('0') < 0:
	    print 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

if __name__ == '__main__':
    parser = OptionParser(usage="usage: %prog [option])")
    (options, args) = parser.parse_args()

    home_dir = os.environ['Zuari_BFT']
    config = Configure(home_dir + '/BFTConfig.txt')
    config.Put('HOME_DIR',home_dir)

    log = Log()
    log.Open('test.log')
    eventManager = EventManager()
    serial_port = config.Get('port')
    comm = Comm232(config, log, eventManager, serial_port) 

    test = SSDCheck(config, eventManager, log, comm)
    result = test.Start()
    print result
